// Code generated by goa v3.11.2, DO NOT EDIT.
//
// Character service
//
// Command:
// $ goa gen character/design

package character

import (
	"context"
)

// The character service performs CRUD operations on a character
type Service interface {
	// Create a new character
	CreateCharacter(context.Context, *Character) (res *Character, err error)
	// Get a character by name
	GetCharacter(context.Context, *GetCharacterPayload) (res *Character, err error)
	// List all characters
	ListCharacters(context.Context) (res []*Character, err error)
	// Update a given character
	UpdateCharacter(context.Context, *Character) (res *Character, err error)
	// Delete a given character
	DeleteCharacter(context.Context, *DeleteCharacterPayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Character"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"createCharacter", "getCharacter", "listCharacters", "updateCharacter", "deleteCharacter"}

// Character is the payload type of the Character service createCharacter
// method.
type Character struct {
	// Name, which is a unique identifier
	Name string
	// Description
	Description string
	// Current health
	Health uint32
	// Amount of experience
	Experience uint32
}

// character already exists
type CharacterAlreadyExists struct {
	// character already exists
	Message string
	// character name
	Name string
}

// character not found
type CharacterNotFound struct {
	// character not found
	Message string
	// character name
	Name string
}

// DeleteCharacterPayload is the payload type of the Character service
// deleteCharacter method.
type DeleteCharacterPayload struct {
	// name of character to be deleted
	Name string
}

// GetCharacterPayload is the payload type of the Character service
// getCharacter method.
type GetCharacterPayload struct {
	// name of character to be retrieved
	Name string
}

// Error returns an error description.
func (e *CharacterAlreadyExists) Error() string {
	return "character already exists"
}

// ErrorName returns "CharacterAlreadyExists".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *CharacterAlreadyExists) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "CharacterAlreadyExists".
func (e *CharacterAlreadyExists) GoaErrorName() string {
	return "CharacterAlreadyExists"
}

// Error returns an error description.
func (e *CharacterNotFound) Error() string {
	return "character not found"
}

// ErrorName returns "CharacterNotFound".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *CharacterNotFound) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "CharacterNotFound".
func (e *CharacterNotFound) GoaErrorName() string {
	return "CharacterNotFound"
}
