// Code generated by goa v3.11.2, DO NOT EDIT.
//
// Front client
//
// Command:
// $ goa gen front/design

package front

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Front" service client.
type Client struct {
	CreateCharacterEndpoint     goa.Endpoint
	GetCharacterEndpoint        goa.Endpoint
	ListCharactersEndpoint      goa.Endpoint
	UpdateCharacterEndpoint     goa.Endpoint
	DeleteCharacterEndpoint     goa.Endpoint
	CreateItemEndpoint          goa.Endpoint
	GetItemEndpoint             goa.Endpoint
	ListItemsEndpoint           goa.Endpoint
	UpdateItemEndpoint          goa.Endpoint
	DeleteItemEndpoint          goa.Endpoint
	AddInventoryItemEndpoint    goa.Endpoint
	RemoveInventoryItemEndpoint goa.Endpoint
	GetInventoryEndpoint        goa.Endpoint
}

// NewClient initializes a "Front" service client given the endpoints.
func NewClient(createCharacter, getCharacter, listCharacters, updateCharacter, deleteCharacter, createItem, getItem, listItems, updateItem, deleteItem, addInventoryItem, removeInventoryItem, getInventory goa.Endpoint) *Client {
	return &Client{
		CreateCharacterEndpoint:     createCharacter,
		GetCharacterEndpoint:        getCharacter,
		ListCharactersEndpoint:      listCharacters,
		UpdateCharacterEndpoint:     updateCharacter,
		DeleteCharacterEndpoint:     deleteCharacter,
		CreateItemEndpoint:          createItem,
		GetItemEndpoint:             getItem,
		ListItemsEndpoint:           listItems,
		UpdateItemEndpoint:          updateItem,
		DeleteItemEndpoint:          deleteItem,
		AddInventoryItemEndpoint:    addInventoryItem,
		RemoveInventoryItemEndpoint: removeInventoryItem,
		GetInventoryEndpoint:        getInventory,
	}
}

// CreateCharacter calls the "createCharacter" endpoint of the "Front" service.
// CreateCharacter may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) CreateCharacter(ctx context.Context, p *Character) (res *Character, err error) {
	var ires interface{}
	ires, err = c.CreateCharacterEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Character), nil
}

// GetCharacter calls the "getCharacter" endpoint of the "Front" service.
// GetCharacter may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) GetCharacter(ctx context.Context, p *GetCharacterPayload) (res *Character, err error) {
	var ires interface{}
	ires, err = c.GetCharacterEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Character), nil
}

// ListCharacters calls the "listCharacters" endpoint of the "Front" service.
// ListCharacters may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) ListCharacters(ctx context.Context) (res []*Character, err error) {
	var ires interface{}
	ires, err = c.ListCharactersEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Character), nil
}

// UpdateCharacter calls the "updateCharacter" endpoint of the "Front" service.
// UpdateCharacter may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) UpdateCharacter(ctx context.Context, p *Character) (res *Character, err error) {
	var ires interface{}
	ires, err = c.UpdateCharacterEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Character), nil
}

// DeleteCharacter calls the "deleteCharacter" endpoint of the "Front" service.
// DeleteCharacter may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) DeleteCharacter(ctx context.Context, p *DeleteCharacterPayload) (err error) {
	_, err = c.DeleteCharacterEndpoint(ctx, p)
	return
}

// CreateItem calls the "createItem" endpoint of the "Front" service.
// CreateItem may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) CreateItem(ctx context.Context, p *Item) (res *Item, err error) {
	var ires interface{}
	ires, err = c.CreateItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Item), nil
}

// GetItem calls the "getItem" endpoint of the "Front" service.
// GetItem may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) GetItem(ctx context.Context, p *GetItemPayload) (res *Item, err error) {
	var ires interface{}
	ires, err = c.GetItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Item), nil
}

// ListItems calls the "listItems" endpoint of the "Front" service.
// ListItems may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) ListItems(ctx context.Context) (res []*Item, err error) {
	var ires interface{}
	ires, err = c.ListItemsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Item), nil
}

// UpdateItem calls the "updateItem" endpoint of the "Front" service.
// UpdateItem may return the following errors:
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - error: internal error
func (c *Client) UpdateItem(ctx context.Context, p *Item) (res *Item, err error) {
	var ires interface{}
	ires, err = c.UpdateItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Item), nil
}

// DeleteItem calls the "deleteItem" endpoint of the "Front" service.
// DeleteItem may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) DeleteItem(ctx context.Context, p *DeleteItemPayload) (err error) {
	_, err = c.DeleteItemEndpoint(ctx, p)
	return
}

// AddInventoryItem calls the "addInventoryItem" endpoint of the "Front"
// service.
// AddInventoryItem may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) AddInventoryItem(ctx context.Context, p *AddInventoryItemPayload) (err error) {
	_, err = c.AddInventoryItemEndpoint(ctx, p)
	return
}

// RemoveInventoryItem calls the "removeInventoryItem" endpoint of the "Front"
// service.
// RemoveInventoryItem may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) RemoveInventoryItem(ctx context.Context, p *RemoveInventoryItemPayload) (err error) {
	_, err = c.RemoveInventoryItemEndpoint(ctx, p)
	return
}

// GetInventory calls the "getInventory" endpoint of the "Front" service.
// GetInventory may return the following errors:
//   - "CharacterAlreadyExists" (type *CharacterAlreadyExists): character already exists
//   - "CharacterNotFound" (type *CharacterNotFound): character not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - error: internal error
func (c *Client) GetInventory(ctx context.Context, p *GetInventoryPayload) (res []string, err error) {
	var ires interface{}
	ires, err = c.GetInventoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]string), nil
}
