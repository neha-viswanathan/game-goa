// Code generated by goa v3.11.2, DO NOT EDIT.
//
// Inventory gRPC client
//
// Command:
// $ goa gen inventory/design

package client

import (
	"context"
	inventorypb "inventory/gen/grpc/inventory/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli inventorypb.InventoryClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the Inventory service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: inventorypb.NewInventoryClient(cc),
		opts:    opts,
	}
}

// AddItem calls the "AddItem" function in inventorypb.InventoryClient
// interface.
func (c *Client) AddItem() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildAddItemFunc(c.grpccli, c.opts...),
			EncodeAddItemRequest,
			nil)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *inventorypb.AddItemCharacterNotFoundError:
				return nil, NewAddItemCharacterNotFoundError(message)
			case *inventorypb.AddItemItemNotFoundError:
				return nil, NewAddItemItemNotFoundError(message)
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// RemoveItem calls the "RemoveItem" function in inventorypb.InventoryClient
// interface.
func (c *Client) RemoveItem() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildRemoveItemFunc(c.grpccli, c.opts...),
			EncodeRemoveItemRequest,
			nil)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *inventorypb.RemoveItemCharacterNotFoundError:
				return nil, NewRemoveItemCharacterNotFoundError(message)
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// GetInventory calls the "GetInventory" function in
// inventorypb.InventoryClient interface.
func (c *Client) GetInventory() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildGetInventoryFunc(c.grpccli, c.opts...),
			EncodeGetInventoryRequest,
			DecodeGetInventoryResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *inventorypb.GetInventoryCharacterNotFoundError:
				return nil, NewGetInventoryCharacterNotFoundError(message)
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}
