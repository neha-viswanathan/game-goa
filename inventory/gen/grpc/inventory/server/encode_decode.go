// Code generated by goa v3.11.2, DO NOT EDIT.
//
// Inventory gRPC server encoders and decoders
//
// Command:
// $ goa gen inventory/design

package server

import (
	"context"
	inventorypb "inventory/gen/grpc/inventory/pb"
	inventory "inventory/gen/inventory"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeAddItemResponse encodes responses from the "Inventory" service
// "addItem" endpoint.
func EncodeAddItemResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	resp := NewProtoAddItemResponse()
	return resp, nil
}

// DecodeAddItemRequest decodes requests sent to "Inventory" service "addItem"
// endpoint.
func DecodeAddItemRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *inventorypb.AddItemRequest
		ok      bool
	)
	{
		if message, ok = v.(*inventorypb.AddItemRequest); !ok {
			return nil, goagrpc.ErrInvalidType("Inventory", "addItem", "*inventorypb.AddItemRequest", v)
		}
	}
	var payload *inventory.AddItemPayload
	{
		payload = NewAddItemPayload(message)
	}
	return payload, nil
}

// EncodeRemoveItemResponse encodes responses from the "Inventory" service
// "removeItem" endpoint.
func EncodeRemoveItemResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	resp := NewProtoRemoveItemResponse()
	return resp, nil
}

// DecodeRemoveItemRequest decodes requests sent to "Inventory" service
// "removeItem" endpoint.
func DecodeRemoveItemRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *inventorypb.RemoveItemRequest
		ok      bool
	)
	{
		if message, ok = v.(*inventorypb.RemoveItemRequest); !ok {
			return nil, goagrpc.ErrInvalidType("Inventory", "removeItem", "*inventorypb.RemoveItemRequest", v)
		}
	}
	var payload *inventory.RemoveItemPayload
	{
		payload = NewRemoveItemPayload(message)
	}
	return payload, nil
}

// EncodeGetInventoryResponse encodes responses from the "Inventory" service
// "getInventory" endpoint.
func EncodeGetInventoryResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.([]string)
	if !ok {
		return nil, goagrpc.ErrInvalidType("Inventory", "getInventory", "[]string", v)
	}
	resp := NewProtoGetInventoryResponse(result)
	return resp, nil
}

// DecodeGetInventoryRequest decodes requests sent to "Inventory" service
// "getInventory" endpoint.
func DecodeGetInventoryRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *inventorypb.GetInventoryRequest
		ok      bool
	)
	{
		if message, ok = v.(*inventorypb.GetInventoryRequest); !ok {
			return nil, goagrpc.ErrInvalidType("Inventory", "getInventory", "*inventorypb.GetInventoryRequest", v)
		}
	}
	var payload *inventory.GetInventoryPayload
	{
		payload = NewGetInventoryPayload(message)
	}
	return payload, nil
}
