// Code generated by goa v3.11.2, DO NOT EDIT.
//
// Inventory gRPC server types
//
// Command:
// $ goa gen inventory/design

package server

import (
	inventorypb "inventory/gen/grpc/inventory/pb"
	inventory "inventory/gen/inventory"
)

// NewAddItemPayload builds the payload of the "addItem" endpoint of the
// "Inventory" service from the gRPC request type.
func NewAddItemPayload(message *inventorypb.AddItemRequest) *inventory.AddItemPayload {
	v := &inventory.AddItemPayload{
		Character: message.Character,
		Item:      message.Item,
	}
	return v
}

// NewProtoAddItemResponse builds the gRPC response type from the result of the
// "addItem" endpoint of the "Inventory" service.
func NewProtoAddItemResponse() *inventorypb.AddItemResponse {
	message := &inventorypb.AddItemResponse{}
	return message
}

// NewAddItemCharacterNotFoundError builds the gRPC error response type from
// the error of the "addItem" endpoint of the "Inventory" service.
func NewAddItemCharacterNotFoundError(er *inventory.CharacterNotFound) *inventorypb.AddItemCharacterNotFoundError {
	message := &inventorypb.AddItemCharacterNotFoundError{
		Message_: er.Message,
		Name:     er.Name,
	}
	return message
}

// NewAddItemItemNotFoundError builds the gRPC error response type from the
// error of the "addItem" endpoint of the "Inventory" service.
func NewAddItemItemNotFoundError(er *inventory.ItemNotFound) *inventorypb.AddItemItemNotFoundError {
	message := &inventorypb.AddItemItemNotFoundError{
		Message_: er.Message,
		Name:     er.Name,
	}
	return message
}

// NewRemoveItemPayload builds the payload of the "removeItem" endpoint of the
// "Inventory" service from the gRPC request type.
func NewRemoveItemPayload(message *inventorypb.RemoveItemRequest) *inventory.RemoveItemPayload {
	v := &inventory.RemoveItemPayload{
		Character: message.Character,
		Item:      message.Item,
	}
	return v
}

// NewProtoRemoveItemResponse builds the gRPC response type from the result of
// the "removeItem" endpoint of the "Inventory" service.
func NewProtoRemoveItemResponse() *inventorypb.RemoveItemResponse {
	message := &inventorypb.RemoveItemResponse{}
	return message
}

// NewRemoveItemCharacterNotFoundError builds the gRPC error response type from
// the error of the "removeItem" endpoint of the "Inventory" service.
func NewRemoveItemCharacterNotFoundError(er *inventory.CharacterNotFound) *inventorypb.RemoveItemCharacterNotFoundError {
	message := &inventorypb.RemoveItemCharacterNotFoundError{
		Message_: er.Message,
		Name:     er.Name,
	}
	return message
}

// NewGetInventoryPayload builds the payload of the "getInventory" endpoint of
// the "Inventory" service from the gRPC request type.
func NewGetInventoryPayload(message *inventorypb.GetInventoryRequest) *inventory.GetInventoryPayload {
	v := &inventory.GetInventoryPayload{
		Character: message.Character,
	}
	return v
}

// NewProtoGetInventoryResponse builds the gRPC response type from the result
// of the "getInventory" endpoint of the "Inventory" service.
func NewProtoGetInventoryResponse(result []string) *inventorypb.GetInventoryResponse {
	message := &inventorypb.GetInventoryResponse{}
	message.Field = make([]string, len(result))
	for i, val := range result {
		message.Field[i] = val
	}
	return message
}

// NewGetInventoryCharacterNotFoundError builds the gRPC error response type
// from the error of the "getInventory" endpoint of the "Inventory" service.
func NewGetInventoryCharacterNotFoundError(er *inventory.CharacterNotFound) *inventorypb.GetInventoryCharacterNotFoundError {
	message := &inventorypb.GetInventoryCharacterNotFoundError{
		Message_: er.Message,
		Name:     er.Name,
	}
	return message
}
