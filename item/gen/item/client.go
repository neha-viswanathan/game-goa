// Code generated by goa v3.11.2, DO NOT EDIT.
//
// Item client
//
// Command:
// $ goa gen item/design

package item

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Item" service client.
type Client struct {
	CreateItemEndpoint goa.Endpoint
	GetItemEndpoint    goa.Endpoint
	ListItemsEndpoint  goa.Endpoint
	UpdateItemEndpoint goa.Endpoint
	DeleteItemEndpoint goa.Endpoint
}

// NewClient initializes a "Item" service client given the endpoints.
func NewClient(createItem, getItem, listItems, updateItem, deleteItem goa.Endpoint) *Client {
	return &Client{
		CreateItemEndpoint: createItem,
		GetItemEndpoint:    getItem,
		ListItemsEndpoint:  listItems,
		UpdateItemEndpoint: updateItem,
		DeleteItemEndpoint: deleteItem,
	}
}

// CreateItem calls the "createItem" endpoint of the "Item" service.
// CreateItem may return the following errors:
//   - "ItemAlreadyExists" (type *ItemAlreadyExists): item already exists
//   - "ItemNotFound" (type *ItemNotFound)
//   - error: internal error
func (c *Client) CreateItem(ctx context.Context, p *Item) (res *Item, err error) {
	var ires interface{}
	ires, err = c.CreateItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Item), nil
}

// GetItem calls the "getItem" endpoint of the "Item" service.
// GetItem may return the following errors:
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists)
//   - error: internal error
func (c *Client) GetItem(ctx context.Context, p *GetItemPayload) (res *Item, err error) {
	var ires interface{}
	ires, err = c.GetItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Item), nil
}

// ListItems calls the "listItems" endpoint of the "Item" service.
// ListItems may return the following errors:
//   - "ItemAlreadyExists" (type *ItemAlreadyExists)
//   - "ItemNotFound" (type *ItemNotFound)
//   - error: internal error
func (c *Client) ListItems(ctx context.Context) (res []*Item, err error) {
	var ires interface{}
	ires, err = c.ListItemsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Item), nil
}

// UpdateItem calls the "updateItem" endpoint of the "Item" service.
// UpdateItem may return the following errors:
//   - "ItemNotFound" (type *ItemNotFound): item not found
//   - "ItemAlreadyExists" (type *ItemAlreadyExists)
//   - error: internal error
func (c *Client) UpdateItem(ctx context.Context, p *Item) (res *Item, err error) {
	var ires interface{}
	ires, err = c.UpdateItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Item), nil
}

// DeleteItem calls the "deleteItem" endpoint of the "Item" service.
// DeleteItem may return the following errors:
//   - "ItemAlreadyExists" (type *ItemAlreadyExists)
//   - "ItemNotFound" (type *ItemNotFound)
//   - error: internal error
func (c *Client) DeleteItem(ctx context.Context, p *DeleteItemPayload) (err error) {
	_, err = c.DeleteItemEndpoint(ctx, p)
	return
}
