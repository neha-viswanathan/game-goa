// Code generated by goa v3.11.2, DO NOT EDIT.
//
// Item service
//
// Command:
// $ goa gen item/design

package item

import (
	"context"
)

// The item service performs CRUD operations on a item
type Service interface {
	// Create a new item
	CreateItem(context.Context, *Item) (res *Item, err error)
	// Get an item by name
	GetItem(context.Context, *GetItemPayload) (res *Item, err error)
	// List all items
	ListItems(context.Context) (res []*Item, err error)
	// Update a given item
	UpdateItem(context.Context, *Item) (res *Item, err error)
	// Delete a given item
	DeleteItem(context.Context, *DeleteItemPayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Item"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"createItem", "getItem", "listItems", "updateItem", "deleteItem"}

// DeleteItemPayload is the payload type of the Item service deleteItem method.
type DeleteItemPayload struct {
	// name of item to be deleted
	Name string
}

// GetItemPayload is the payload type of the Item service getItem method.
type GetItemPayload struct {
	// name of item to be retrieved
	Name string
}

// Item is the payload type of the Item service createItem method.
type Item struct {
	// Name, which is a unique identifier
	Name string
	// Description
	Description string
	// Amount of damage
	Damage uint32
	// Amount of healing
	Healing uint32
	// Amount of protection
	Protection uint32
}

// item already exists
type ItemAlreadyExists struct {
	// item already exists
	Message string
	// item name
	Name string
}

// item not found
type ItemNotFound struct {
	// item not found
	Message string
	// item name
	Name string
}

// Error returns an error description.
func (e *ItemAlreadyExists) Error() string {
	return "item already exists"
}

// ErrorName returns "ItemAlreadyExists".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *ItemAlreadyExists) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "ItemAlreadyExists".
func (e *ItemAlreadyExists) GoaErrorName() string {
	return "ItemAlreadyExists"
}

// Error returns an error description.
func (e *ItemNotFound) Error() string {
	return "item not found"
}

// ErrorName returns "ItemNotFound".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *ItemNotFound) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "ItemNotFound".
func (e *ItemNotFound) GoaErrorName() string {
	return "ItemNotFound"
}
